#!/bin/sh

name=$(basename "$0")

show_usage() {
  echo "Usage: $name [--version][--scale] <file>"
  exit 1
}

show_version() {
  echo "$name version 1.0.2"
}

xcrecord() {
  xcrun_destination=$(mktemp)
  xcrun simctl io booted recordVideo "$xcrun_destination"

  palette=$(mktemp "$TMPDIR$(uuidgen).png")
  paletteops="stats_mode=diff"
  filters=fps=10

  if [ -z "$scale" ]; then
    scale="-1:480"
  fi

  if [ -z "$no_scale" ]; then
    filters=$filters,scale="$scale":flags=lanczos
  fi

  ffmpeg_destination="$(mktemp "$TMPDIR""$(uuidgen)".gif)"

  ffmpeg -loglevel quiet \
    -i "$xcrun_destination" \
    -vf "$filters,palettegen=$paletteops" \
    -y "$palette"
  ffmpeg -loglevel quiet \
    -i "$xcrun_destination" \
    -i "$palette" \
    -filter_complex "$filters [x]; [x][1:v] paletteuse" \
    -y "$ffmpeg_destination"

  gifsicle --optimize=3 --output "$output" "$ffmpeg_destination"

  rm -r "$xcrun_destination" "$palette" "$ffmpeg_destination"
}

platform=$(uname | cut -d _ -f 1 | tr '[:upper:]' '[:lower:]')

case "$platform" in
  "darwin")
    GETOPT="$(brew --prefix gnu-getopt 2>/dev/null || echo /usr/local)/bin/getopt"
    ;;
  *)
    GETOPT="getopt"
    ;;
esac

if ! ARGS=$($GETOPT --long version,scale:,no-scale --options vs: -- "$@")
then
  show_usage
fi

eval set -- "$ARGS"
while [ $# -gt 0 ]
do
  case "$1" in
    -v|--version)
      show_version
      exit
      ;;
    -s|--scale)
      scale=$2
      shift 2
      ;;
    --no-scale)
      no_scale=true
      shift
      ;;
    --)
      shift
      break
      ;;
  esac
done

shift "$((OPTIND - 1))"

while true ; do
  case $1 in
    ?*)
      output=$1
      shift
      break
      ;;
    *)
      show_usage
      ;;
  esac
done

xcrecord
